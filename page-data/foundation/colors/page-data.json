{"componentChunkName":"component---src-templates-markdown-template-js","path":"/foundation/colors","result":{"data":{"markdownRemark":{"html":"<h4>loadColors</h4>\n<p>Load a set of colors to be used in the app.<br>\nThese colors will be accessible through the Colors class and as modifiers.\nusage:</p>\n<pre><code class=\"language-javascript\">import {Colors} from 'react-native-ui-lib';\n\nColors.loadColors({\n  error: '#ff2442',\n  success: '#00CD8B',\n  text: '#20303C'\n});\n</code></pre>\n<pre><code class=\"language-jsx\">import {View, Text, Colors} from 'react-native-ui-lib';\n\n&#x3C;View>\n  &#x3C;Text style={{color: Colors.error}}>Error Message&#x3C;/Text>\n  &#x3C;Text success>Success Message&#x3C;/Text>\n&#x3C;View>\n</code></pre>\n<h4>loadSchemes</h4>\n<p>Load a set of scheme colors to support dark/light mode.<br>\nThis feature works hand in hand with our modifiers </p>\n<pre><code class=\"language-js\">Colors.loadSchemes({\n  light: {\n    screenBG: 'transparent',\n    textColor: Colors.grey10,\n    moonOrSun: Colors.yellow30,\n    mountainForeground: Colors.green30,\n    mountainBackground: Colors.green50\n  },\n  dark: {\n    screenBG: Colors.grey10,\n    textColor: Colors.white,\n    moonOrSun: Colors.grey80,\n    mountainForeground: Colors.violet10,\n    mountainBackground: Colors.violet20\n  }\n});\n</code></pre>\n<pre><code class=\"language-jsx\">&#x3C;View flex padding-page bg-screenBG>\n  &#x3C;Text h1 textColor>\n    Dark Mode\n  &#x3C;/Text>      \n&#x3C;/View>\n</code></pre>\n<h4>rgba</h4>\n<p>usage:</p>\n<pre><code class=\"language-js\">import {Colors} from 'react-native-ui-lib';\n\nColors.rgba('#ff2442', 0.05); // 'rgb(255, 36, 66, 0.05)'\nColors.rgba(44, 224, 112, 0.2); // 'rgb(44, 224, 112, 0.2)'\n</code></pre>\n<h4>getColorTint</h4>\n<p>usage:</p>\n<pre><code class=\"language-js\">import {Colors} from 'react-native-ui-lib';\n\nColors.getColorTint(Colors.green30, 70); // will return the value of Colors.green70\nColors.getColorTint('#ff2442', 50); // will return the 5th tint in an autogenerate 8-tints palette based on '#ff2442'\n</code></pre>\n<h4>isDark</h4>\n<p>returns <code>true</code> if a color is considered dark (bright colors will return <code>false</code>)</p>\n<pre><code class=\"language-js\">import {Colors} from 'react-native-ui-lib';\n\nColors.isDark(Colors.grey10); // true\nColors.isDark(Colors.grey80); // false\n</code></pre>","frontmatter":{"path":"/foundation/colors","title":"Colors"}}},"pageContext":{}},"staticQueryHashes":["1243665866","3675868689"]}