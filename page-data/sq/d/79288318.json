{"data":{"allComponentMetadata":{"edges":[{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"View","docblock":"@description: An enhanced View component\n@extends: View\n@extendslink: https://facebook.github.io/react-native/docs/view.html\n@modifiers: margins, paddings, alignments, background, borderRadius"}},{"node":{"displayName":"TextField","docblock":""}},{"node":{"displayName":"Wizard","docblock":"@description: Wizard Component: a wizard presents a series of steps in  prescribed order\nthat the user needs to complete in order to accomplish a goal (e.g. purchase a product).\n\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/WizardScreen.js\n@notes: Use Wizard with nested Wizard.Step(s) to achieve the desired result."}},{"node":{"displayName":"TouchableOpacity","docblock":"@description: A wrapper for TouchableOpacity component. Support onPress, throttling and activeBackgroundColor\n@extends: TouchableOpacity\n@modifiers: margins, paddings, alignments, background, borderRadius\n@extendslink: https://facebook.github.io/react-native/docs/touchableopacity.html\n@gif: https://media.giphy.com/media/xULW8AMIgw7l31zjm8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/src/components/touchableOpacity/index.tsx"}},{"node":{"displayName":"Wizard.Step","docblock":"@description: WizardStep Component: a wizard presents a series of steps in  prescribed order\nthat the user needs to complete in order to accomplish a goal (e.g. purchase a product).\n\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/WizardScreen.js\n@notes: Use Wizard with nested Wizard.Step(s) to achieve the desired result."}},{"node":{"displayName":"TextArea","docblock":"@description: a wrapper for Text Field component to create enclosed text area\n@modifiers: Typography\n@extends: TextField\n@extendslink: https://github.com/wix/react-native-ui-lib/blob/master/src/components/textField/index.js\n@gif: https://media.giphy.com/media/3oFzmoU8TdfHeYZNZu/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TextFieldScreen/InputsScreen.js"}},{"node":{"displayName":"Text","docblock":"@description: A wrapper for Text component with extra functionality like modifiers support\n@extends: Text\n@extendslink: https://facebook.github.io/react-native/docs/text.html\n@modifiers: margins, color, typography"}},{"node":{"displayName":"FadedScrollView","docblock":""}},{"node":{"displayName":"TabController.PageCarousel","docblock":"@description: TabController's Page Carousel\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n@notes: You must pass `asCarousel` flag to TabController and render your TabPages inside a PageCarousel"}},{"node":{"displayName":"Stepper","docblock":"@description: Stepper component with increase and decrease buttons\n@gif: https://media.giphy.com/media/3oFzm47bk0v4WV15O8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/StepperScreen.js"}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"TabController.TabBarItem","docblock":"@description: TabController's TabBarItem\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n@notes: Must be rendered as a direct child of TabController.TabBar."}},{"node":{"displayName":"StateScreen","docblock":"@description: Component that shows a full screen for a certain state, like an empty state\n@image: https://user-images.githubusercontent.com/33805983/34672894-f262ab84-f488-11e7-83f0-4ee0f0ac34ba.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/EmptyStateScreen.js"}},{"node":{"displayName":"TabController.TabPage","docblock":"@description: TabController's TabPage\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx"}},{"node":{"displayName":"StackAggregator","docblock":"@description: Stack aggregator component\n@modifiers: margin, padding\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/StackAggregatorScreen.js"}},{"node":{"displayName":"ColorSliderGroup","docblock":"@description: A Gradient Slider component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SliderScreen.js"}},{"node":{"displayName":"GradientSlider","docblock":"@description: A Gradient Slider component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SliderScreen.js"}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"TargetElement","docblock":""}},{"node":{"displayName":"SharedArea","docblock":""}},{"node":{"displayName":"SourceElement","docblock":""}},{"node":{"displayName":"ProgressBar","docblock":"@description: Animated progress bar\n@gif:https://media.giphy.com/media/3o752o08oY0oCvOxR6/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ProgressBarScreen.js\n@extends: AnimatedScanner\n@extendsLink: https://wix-private.github.io/wix-react-native-ui-lib/docs/public/AnimatedScanner/"}},{"node":{"displayName":"ProgressiveImage","docblock":"@description: Image component that loads first a small thumbnail of the images, \n              and fades-in the full-sized image with animation once it's loaded\n@extends: Animated.Image \n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ProgressiveImageScreen.js"}},{"node":{"displayName":"TabController","docblock":"@description: A performant solution for a tab controller with lazy load mechanism\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n@notes: This component is based on react-native-gesture-handler\n@important: On Android, if using react-native-navigation, make sure to wrap your screen with gestureHandlerRootHOC\n@importantLink: https://kmagiera.github.io/react-native-gesture-handler/docs/getting-started.html#with-wix-react-native-navigation-https-githubcom-wix-react-native-navigation"}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"TabBar.Item","docblock":"@description: TabBar.Item, inner component of TabBar for configuring the tabs\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.tsx\n@extends: TouchableOpacity\n@extendsLink: https://facebook.github.io/react-native/docs/touchableopacity"}},{"node":{"displayName":"Switch","docblock":"Switch component for toggling boolean value related to some context"}},{"node":{"displayName":"Picker.Item","docblock":"@description: Picker.Item, for configuring the Picker's selectable options\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PickerScreen.js"}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"LoaderScreen","docblock":"@description: Component that shows a full screen with an activity indicator\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/LoadingScreen.js"}},{"node":{"displayName":"ScrollBar","docblock":"@description: Scrollable container with animated gradient overlay for horizontal scroll\n@extends: ScrollView / FlatList"}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"ListItem.Part","docblock":"@description: ListItem.Part, a sub ListItem component for layout-ing inside a ListItem\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BasicListScreen.js"}},{"node":{"displayName":"RadioGroup","docblock":"Wrap a group of Radio Buttons to automatically control their selection"}},{"node":{"displayName":"MaskedInput","docblock":"@description: Mask Input to create custom looking inputs with custom formats\n@gif: https://camo.githubusercontent.com/61eedb65e968845d5eac713dcd21a69691571fb1/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4b5a5a7446666f486f454b334b2f67697068792e676966\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/MaskedInputScreen.js"}},{"node":{"displayName":"ListItem","docblock":"@description: List item component to render inside a List component\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@gif: https://media.giphy.com/media/l1IBjHowyPcOTWAY8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BasicListScreen.js"}},{"node":{"displayName":"RadioButton","docblock":"A Radio Button component, should be wrapped inside a RadioGroup"}},{"node":{"displayName":"PanGestureView","docblock":"@description: PanGestureView component for drag and swipe gestures (supports only vertical gestures at the moment)"}},{"node":{"displayName":"PanResponderView","docblock":"@description: panResponderView component created to making listening to swipe and drag events easier.\n@notes: Has to be used as a child of a PanningProvider that also has a PanListenerView.\n        The PanListenerView is the one that sends the drag\\swipe events.\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PanResponderScreen.tsx"}},{"node":{"displayName":"Overlay","docblock":"@description: Overlay view with types (default, top, bottom, solid)\n@extends: Image\n@extendsLink: https://facebook.github.io/react-native/docs/image"}},{"node":{"displayName":"PanningProvider","docblock":"@description: Wraps the panResponderView and panListenerView to provide a shared context"}},{"node":{"displayName":"DateTimePicker","docblock":"@description: Date and Time Picker Component that wraps RNDateTimePicker for date and time modes.\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/DateTimePickerScreen.js\n@important: DateTimePicker uses a native library. You MUST add and link the native library to both iOS and Android projects.\n@extends: TextField, react-native-community/datetimepicker\n@extendsLink: https://github.com/react-native-community/react-native-datetimepicker#react-native-datetimepicker"}},{"node":{"displayName":"ConnectionStatusBar","docblock":"@description: Top bar to show a \"no internet\" connection status. Note: Run on real device for best results\n@image: https://user-images.githubusercontent.com/33805983/34683190-f3b1904c-f4a9-11e7-9d46-9a340bd35448.png, https://user-images.githubusercontent.com/33805983/34484206-edc6c6e4-efcb-11e7-88b2-cd394c19dd5e.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ConnectionStatusBarScreen.js"}},{"node":{"displayName":"PageControl","docblock":"@description: Page indicator, typically used in paged scroll-views\n@image: https://user-images.githubusercontent.com/33805983/34663655-76698110-f460-11e7-854b-243d27f66fec.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PageControlScreen.tsx"}},{"node":{"displayName":"ColorSwatch","docblock":"@description: A color swatch component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.js\n@extends: Animated.View\n@extendsLink: https://facebook.github.io/react-native/docs/animated"}},{"node":{"displayName":"Modal","docblock":"@description: Component that present content on top of the invoking screen\n@extends: Modal\n@extendslink: https://facebook.github.io/react-native/docs/modal.html\n@gif: https://media.giphy.com/media/3oFzmfSX8KgvctI4Ks/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ModalScreen.tsx"}},{"node":{"displayName":"ColorPicker","docblock":"@description: A color picker component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.js\n@notes: This is a screen width component"}},{"node":{"displayName":"Modal.TopBar","docblock":"@description: Modal.TopBar, inner component for configuring the Modal component's title, buttons and statusBar\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ModalScreen.tsx"}},{"node":{"displayName":"Image","docblock":"@description: Image wrapper with extra functionality like source transform and assets support\n@extends: Image\n@extendslink: https://facebook.github.io/react-native/docs/image.html"}},{"node":{"displayName":"TabController.TabBar","docblock":"@description: TabController's TabBar component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx"}},{"node":{"displayName":"FloatingButton","docblock":"@description: Hovering button with gradient background\n@modifiers: margin, background, color\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FloatingButtonScreen.tsx\n@extends: Button\n@extendsLink: https://github.com/wix/react-native-ui-lib/blob/master/src/components/button/index.js"}},{"node":{"displayName":"Fader","docblock":""}},{"node":{"displayName":"ExpandableSection","docblock":"@description: ExpandableSection component to render expanded section below or above the sectionHeader\n@gif: https://media.giphy.com/media/uCGZ92nZPdBOmF1H1z/giphy.gif, https://media.giphy.com/media/0VIh41mkSl8omS49oD/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ExpandableSectionScreen.tsx"}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"DialogDismissibleView","docblock":""}},{"node":{"displayName":"Chip","docblock":"@description: Chip component\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ChipScreen.tsx"}},{"node":{"displayName":"Checkbox","docblock":"@description: Checkbox component for toggling boolean value related to some context\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CheckboxScreen.tsx"}},{"node":{"displayName":"Card.Image","docblock":"@description: Card.Image, part of the Card component belongs inside a Card (better be a direct child)\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.tsx"}},{"node":{"displayName":"Card.Section","docblock":"@description: Card.Section for rendering content easily inside a card\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.tsx"}},{"node":{"displayName":"Badge","docblock":"@description: Round colored badge, typically used to show a number\n@extends: Animatable.View\n@extendslink: https://github.com/oblador/react-native-animatable\n@image: https://user-images.githubusercontent.com/33805983/34480753-df7a868a-efb6-11e7-9072-80f5c110a4f3.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BadgesScreen.tsx"}},{"node":{"displayName":"Toast","docblock":"@description: A toast component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ToastsScreen.js"}},{"node":{"displayName":"ActionBar","docblock":"@description: Quick actions bar, each action support Button component props\n@modifiers: margin, padding\n@gif: https://media.giphy.com/media/xULW8DwxkniFDMw7TO/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionBarScreen.tsx"}},{"node":{"displayName":"TagsInput","docblock":"@description: Tags input component (chips)\n@modifiers: Typography\n@gif: https://camo.githubusercontent.com/9c2671024f60566b980638ea01b517f6fb509d0b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f336f45686e374a79685431566658746963452f67697068792e676966\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ChipsInputScreen.js\n@extends: TextField\n@extendsLink: https://github.com/wix/react-native-ui-lib/blob/master/src/components/inputs/TextField.js"}},{"node":{"displayName":"Slider","docblock":"@description: A Slider component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SliderScreen.js"}},{"node":{"displayName":"Picker","docblock":"@description: Picker Component, support single or multiple selection, blurModel and nativePicker\n@gif: https://media.giphy.com/media/3o751SiuZZiByET2lq/giphy.gif, https://media.giphy.com/media/TgMQnyw5grJIDohzvx/giphy.gif, https://media.giphy.com/media/5hsdmVptBRskZKn787/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PickerScreen.js"}},{"node":{"displayName":"Hint","docblock":"@description: Hint component for displaying a tooltip over wrapped component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/HintsScreen.js\n@notes: You can either wrap a component or pass a specific targetFrame"}},{"node":{"displayName":"FeatureHighlight","docblock":"@description: FeatureHighlight component for feature discovery\n@notes: 1) FeatureHighlight component must be a direct child of the root view returned in render().; 2) If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it.\n@important: FeatureHighlight uses a native library. You MUST add and link the native library to both iOS and Android projects. For instruction please see\n@importantLink: https://facebook.github.io/react-native/docs/linking-libraries-ios.html\n@extends: HighlighterOverlayView\n@extendslink: docs/HighlighterOverlayView\n@gif: https://media.giphy.com/media/3ohs4D5irZm5GojsDS/giphy.gif, https://media.giphy.com/media/3oxQNaDQckPZI78rWo/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FeatureHighlightScreen.js"}},{"node":{"displayName":"ColorPalette","docblock":"@description: A color palette component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.js\n@notes: This is a screen width component"}},{"node":{"displayName":"ColorPickerDialog","docblock":"@description: A color picker dialog component\n@extends: Dialog\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.js"}},{"node":{"displayName":"TabBar","docblock":"@description: TabBar Component\n@modifiers: alignment, flex, padding, margin, background, typography, color (list of supported modifiers)\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.tsx\n@extends: ScrollBar\n@extendsLink:https://github.com/wix/react-native-ui-lib/blob/master/src/components/scrollBar/index.js\n@notes: This is screen width component."}},{"node":{"displayName":"ChipsInput","docblock":"@description: Tags input component (chips)\n@modifiers: Typography\n@gif: https://camo.githubusercontent.com/9c2671024f60566b980638ea01b517f6fb509d0b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f336f45686e374a79685431566658746963452f67697068792e676966\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ChipsInputScreen.js\n@extends: TextField\n@extendsLink: https://github.com/wix/react-native-ui-lib/blob/master/src/components/inputs/TextField.js"}},{"node":{"displayName":"AnimatedImage","docblock":"@description: Image component that fades-in the image with animation once it's loaded\n@extends: Animated.Image\n@gif: https://media.giphy.com/media/l0HU7jj0ivEFyZIA0/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AnimatedImageScreen.js"}},{"node":{"displayName":"PanDismissibleView","docblock":"@description: PanDismissibleView component created to making listening to swipe and drag events easier,\n@notes: Has to be used as a child of a PanningProvider that also has a PanListenerView.\n        The PanListenerView is the one that sends the drag\\swipe events."}},{"node":{"displayName":"PanListenerView","docblock":"@description: PanListenerView component created to making listening to swipe and drag events easier\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PanListenerScreen.tsx"}},{"node":{"displayName":"ActionSheet","docblock":"@description: Cross platform Action Sheet, with a support for native iOS solution\n@gif: https://media.giphy.com/media/l0HUpXOR6RqB2ct5S/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionSheetScreen.js"}},{"node":{"displayName":"Dialog","docblock":"@description: Dialog component for displaying custom content inside a popup dialog\n@notes: Use alignment modifiers to control the dialog position\n(top, bottom, centerV, centerH, etc... by default the dialog is aligned to center)\n@modifiers: alignment\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/DialogScreen.js\n@gif: https://media.giphy.com/media/9S58XdLCoUiLzAc1b1/giphy.gif"}},{"node":{"displayName":"AnimatedScanner","docblock":"@description: Scanner component for progress indication\n@extends: Animated.View\n@gif: https://media.giphy.com/media/l49JVcxoclUXbryiA/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardScannerScreen.js"}},{"node":{"displayName":"KeyboardAwareFlatList","docblock":"@description: A wrapper component which handles the FlatList insets properly when the keyboard is shown and hides the content, scrolling content above the keybaord.\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/KeyboardAwareScrollViewScreen.js"}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"KeyboardAwareScrollView","docblock":"@description: A wrapper component which handles the ScrollView insets properly when the keyboard is shown and hides the content, scrolling content above the keybaord.\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/KeyboardAwareScrollViewScreen.js"}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"Drawer","docblock":"@description: Drawer Component\n@important: If your app works with RNN, your screen must be wrapped\nwith gestureHandlerRootHOC from 'react-native-gesture-handler'. see\n@importantLink: https://kmagiera.github.io/react-native-gesture-handler/docs/getting-started.html#with-wix-react-native-navigation-https-githubcom-wix-react-native-navigation"}},{"node":{"displayName":"Carousel","docblock":"@description: Carousel for scrolling pages horizontally\n@gif: https://media.giphy.com/media/l0HU7f8gjpRlMRhKw/giphy.gif, https://media.giphy.com/media/3oFzmcjX9OhpyckhcQ/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.tsx\n@extends: ScrollView\n@extendsLink: https://facebook.github.io/react-native/docs/scrollview\n@notes: This is screen width Component"}},{"node":{"displayName":"Card","docblock":"@description: Card component\n@extends: TouchableOpacity\n@extendsnotes: (Touchable when passing onPress)\n@extendslink: docs/TouchableOpacity\n@modifiers: margin, padding\n@gif: https://media.giphy.com/media/l0HU9SKWmv0VTOYMM/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.tsx"}},{"node":{"displayName":"Button","docblock":"@description: Basic button component\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@modifiers: margin, background\n@gif: https://media.giphy.com/media/xULW8j5WzsuPytqklq/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ButtonsScreen.tsx"}},{"node":{"displayName":"Avatar","docblock":"@description: Avatar component for displaying user profile images\n@extends: TouchableOpacity\n@extendsnotes: (when passing onPress)\n@extendslink: docs/TouchableOpacity\n@image: https://user-images.githubusercontent.com/33805983/34480603-197d7f64-efb6-11e7-9feb-db8ba756f055.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AvatarsScreen.tsx"}},{"node":{"displayName":"TextField","docblock":"@description: A wrapper for TextInput component with extra functionality like floating placeholder and validations (This is an uncontrolled component)\n@modifiers: Typography\n@extends: TextInput\n@extendslink: https://facebook.github.io/react-native/docs/textinput\n@gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TextFieldScreen/BasicTextFieldScreen.js"}},{"node":{"displayName":"IGNORE","docblock":"@description: TabController's TabBarItem\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/TabControllerScreen/index.js\n@notes: Must be rendered as a direct child of TabController.TabBar."}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"IGNORE","docblock":"@description: TabController's TabPage\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/TabControllerScreen/index.js"}},{"node":{"displayName":"Incubator.TouchableOpacity","docblock":"@description: a Better, enhanced TouchableOpacity component\n@modifiers: flex, margin, padding, background\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/TouchableOpacityScreen.js"}},{"node":{"displayName":"Incubator.TextField","docblock":""}},{"node":{"displayName":"IGNORE","docblock":"@description: A performant solution for a tab controller with lazy load mechanism\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/TabControllerScreen/index.js\n@notes: This component is based on react-native-gesture-handler\n@important: On Android, if using react-native-navigation, make sure to wrap your screen with gestureHandlerRootHOC\n@importantLink: https://kmagiera.github.io/react-native-gesture-handler/docs/getting-started.html#with-wix-react-native-navigation-https-githubcom-wix-react-native-navigation"}},{"node":{"displayName":"Item","docblock":""}},{"node":{"displayName":"WheelPicker","docblock":""}},{"node":{"displayName":"Incubator.TextField","docblock":""}},{"node":{"displayName":"Incubator.TextField","docblock":""}},{"node":{"displayName":"Incubator.TextField","docblock":""}},{"node":{"displayName":"Incubator.TextField","docblock":""}},{"node":{"displayName":"IGNORE","docblock":"@description: TabController's TabBar component\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/TabControllerScreen/index.js"}},{"node":{"displayName":"Incubator.TextField","docblock":"@description: A controlled, customizable TextField with validation support\n@extends: TextInput\n@extendslink: https://reactnative.dev/docs/textinput\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/IncubatorTextFieldScreen.tsx"}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"WheelPicker.Item","docblock":""}},{"node":{"displayName":"WheelPicker","docblock":""}},{"node":{"displayName":"SafeAreaSpacerView","docblock":""}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"KeyboardAwareInsetsView","docblock":"@description: Used to add an inset when a keyboard is used and might hide part of the screen.\n\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TextFieldScreen/InputsScreen.js\n@notes: This view is useful only for iOS."}},{"node":{"displayName":"KeyboardTrackingView","docblock":"@description: A UI component that enables “keyboard tracking\" for this view and it's sub-views.\nWould typically be used when you have a TextField or TextInput inside this view.\n\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/nativeComponentScreens/KeyboardTrackingViewScreen.js\n@notes: This view is useful only for iOS."}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"IGNORE","docblock":""}},{"node":{"displayName":"KeyboardAccessoryView","docblock":"@description: View that allows replacing the default keyboard with other components\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/nativeComponentScreens/keyboardInput/KeyboardInputViewScreen.js"}}]},"allFile":{"edges":[{"node":{"childMarkdownRemark":{"frontmatter":{"index":1,"title":"Setup","path":"/getting-started/setup"}}}},{"node":{"childMarkdownRemark":{"frontmatter":{"index":2,"title":"Usage","path":"/getting-started/usage"}}}},{"node":{"childMarkdownRemark":{"frontmatter":{"index":3,"title":"v5","path":"/getting-started/v5"}}}},{"node":{"childMarkdownRemark":{"frontmatter":{"index":6,"title":"Assets","path":"/foundation/assets"}}}},{"node":{"childMarkdownRemark":{"frontmatter":{"index":7,"title":"Colors","path":"/foundation/colors"}}}},{"node":{"childMarkdownRemark":{"frontmatter":{"index":5,"title":"Modifiers","path":"/foundation/modifiers"}}}},{"node":{"childMarkdownRemark":{"frontmatter":{"index":4,"title":"Style","path":"/foundation/style"}}}},{"node":{"childMarkdownRemark":{"frontmatter":{"index":7,"title":"Theme Manager","path":"/foundation/theme-manager"}}}}]}}}