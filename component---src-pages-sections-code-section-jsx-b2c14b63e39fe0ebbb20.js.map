{"version":3,"sources":["webpack:///./src/pages/sections/CodeSection.jsx","webpack:///./src/data/CodeSectionSnippets.js"],"names":["tabs","headline","codeSnippet","TabBar","useState","selectedTab","setSelectedTab","className","onChangeIndex","selectedIndex","to","map","title","index","tabClassName","classnames","selected","key","onClick","onKeyPress","role","tabIndex","Tab"],"mappings":"qKAOMA,G,UAAO,CACX,CAACC,SAAS,iEAAmEC,YCRjD,kgBDS5B,CAACD,SAAS,mCAAqCC,YCcxB,keDbvB,CACED,SAAS,2HACTC,YC8ByB,ueDTvBC,GAjBS,qBACb,MAAsCC,mBAAS,GAAxCC,EAAP,KAAoBC,EAApB,KAEA,OACE,yBAAKC,UAAU,gBACb,wBAAIA,UAAU,YAAd,6CACA,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAQC,cAAeF,EAAgBG,cAAeJ,IACtD,kBAAC,EAAQL,EAAKK,IACd,kBAAC,IAAD,CAAME,UAAU,mBAAmBG,GAAG,0BACpC,4BAAQH,UAAU,QAAlB,iBAOK,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,cAC9B,OACE,yBAAKF,UAAU,QACZ,CAAC,aAAc,QAAS,aAAaI,KAAI,SAACC,EAAOC,GAChD,IAAMC,EAAeC,IAAW,MAAO,CAACC,SAAUP,IAAkBI,IACpE,OACE,yBACEI,IAAKL,EACLL,UAAWO,EACXI,QAAS,kBAAMV,EAAcK,IAC7BM,WAAY,kBAAMX,EAAcK,IAChCO,KAAK,MACLC,SAAUR,GAETD,SAQPU,EAAM,SAAC,GAA6B,IAA5BrB,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YACtB,OACE,yBAAKK,UAAU,YACb,2BAAIN,GACJ,6BACE,0BAAMM,UAAU,uBAAuBL,O","file":"component---src-pages-sections-code-section-jsx-b2c14b63e39fe0ebbb20.js","sourcesContent":["import React, {useState} from 'react';\nimport Link from 'gatsby-link';\nimport classnames from 'classnames';\n\nimport {foundationSnippet, themeSnippet, modifiersSnippet} from '../../data/CodeSectionSnippets';\nimport './CodeSection.scss';\n\nconst tabs = [\n  {headline: `Define your app's foundation - colors, typography and spacings`, codeSnippet: foundationSnippet},\n  {headline: `Set a theme for your components.`, codeSnippet: themeSnippet},\n  {\n    headline: `Build your app. With our auto-generated modifiers, it's a matter of minutes till you create your first beautiful screen.`,\n    codeSnippet: modifiersSnippet\n  }\n];\n\nexport default () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <div className=\"code-section\">\n      <h2 className=\"headline\">Effortless App Building Using Our Toolset</h2>\n      <div className=\"code-example\">\n        <TabBar onChangeIndex={setSelectedTab} selectedIndex={selectedTab} />\n        <Tab {...tabs[selectedTab]} />\n        <Link className=\"view-docs-button\" to=\"/getting-started/setup\">\n          <button className=\"dark\">View Docs</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst TabBar = ({onChangeIndex, selectedIndex}) => {\n  return (\n    <div className=\"tabs\">\n      {['Foundation', 'Theme', 'Modifiers'].map((title, index) => {\n        const tabClassName = classnames('tab', {selected: selectedIndex === index});\n        return (\n          <div\n            key={title}\n            className={tabClassName}\n            onClick={() => onChangeIndex(index)}\n            onKeyPress={() => onChangeIndex(index)}\n            role=\"tab\"\n            tabIndex={index}\n          >\n            {title}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Tab = ({headline, codeSnippet}) => {\n  return (\n    <div className=\"tab-page\">\n      <p>{headline}</p>\n      <pre>\n        <code className=\"language-javascript\">{codeSnippet}</code>\n      </pre>\n    </div>\n  );\n};\n","export const foundationSnippet = `import {Colors, Typography, Spacings} from 'react-native-ui-lib';\n\nColors.loadColors({\n  primaryColor: '#2364AA',\n  secondaryColor: '#81C3D7',\n  textColor: '#221D23',\n  errorColor: '#E63B2E',\n  successColor: '#ADC76F',\n  warnColor: '#FF963C'\n});\n\nTypography.loadTypographies({\n  heading: {fontSize: 36, fontWeight: '600'},\n  subheading: {fontSize: 28, fontWeight: '500'},\n  body: {fontSize: 18, fontWeight: '400'} \n});\n\nSpacings.loadSpacings({\n  page: 20,\n  card: 12,\n  gridGutter: 16 \n});`;\n\nexport const themeSnippet = `import {ThemeManager} from 'react-native-ui-lib';\n\n// with plain object \nThemeManager.setComponentTheme('Card', {\n  borderRadius: 8,\n  activeOpacity: 0.9 \n});\n\n// with a dynamic function\nThemeManager.setComponentTheme('Button', (props, context) => {\n  // 'square' is not an original Button prop, but a custom prop that can\n  // be used to create different variations of buttons in your app\n  if (props.square) {\n    return {\n      borderRadius: 0\n    };\n  }\n});`;\n\nexport const modifiersSnippet = `import React, {Component} from 'react';\nimport {View, Text, Card, Button} from 'react-native-ui-lib';\n\nclass MyScreen extends Component {\n  render() {\n    return (\n      <View flex padding-page>\n        <Text heading marginB-s4>My Screen</Text>\n        <Card height={100} center padding-card marginB-s4>\n          <Text body>This is an example card </Text>\n        </Card>\n\n        <Button label=\"Button\" body bg-blue30 square></Button>\n      </View>\n    );\n  }\n}`;\n"],"sourceRoot":""}