// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Hint Screen component test Test Hint component background color 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  modifiers={
    Object {
      "alignments": Object {},
      "backgroundColor": undefined,
      "borderRadius": undefined,
      "color": "transparent",
      "flexStyle": undefined,
      "margins": Object {},
      "paddings": Object {},
      "positionStyle": undefined,
      "typography": undefined,
    }
  }
  onBackgroundPress={[Function]}
  onRequestClose={[Function]}
  testID="Hint.modal"
  transparent={true}
  visible={true}
>
  <View
    blurType="light"
    style={
      Array [
        undefined,
        undefined,
        undefined,
        undefined,
        Object {},
        Object {},
        Object {},
        Object {
          "flex": 1,
        },
      ]
    }
  >
    <View
      style={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          Object {},
          Object {},
          Object {},
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "backgroundColor": undefined,
            },
          ],
        ]
      }
      testID="Hint.modal"
      useSafeArea={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            Object {},
            Object {},
            Object {},
            Object {
              "flex": 1,
            },
          ]
        }
      />
    </View>
    <View
      collapsable={true}
      color="#FFFFFF"
      enableShadow={true}
      message="Hint message to hint things"
      onBackgroundPress={[Function]}
      position="top"
      removePaddings={true}
      style={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          Object {},
          Object {},
          Object {},
          Array [
            Object {
              "position": "absolute",
            },
            undefined,
            Object {
              "left": 1,
              "top": 1,
            },
          ],
        ]
      }
      targetFrame={
        Object {
          "height": 1,
          "width": 1,
          "x": 1,
          "y": 1,
        }
      }
      useSideTip={true}
      visible={true}
    >
      <View
        animated={true}
        pointerEvents="box-none"
        style={
          Object {
            "alignItems": "flex-start",
            "bottom": 0,
            "left": -1,
            "opacity": 1,
            "paddingHorizontal": 20,
            "paddingLeft": 1,
            "paddingVertical": 16,
            "position": "absolute",
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 750,
          }
        }
        testID="Hint"
      >
        <View
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            centerV={true}
            row={true}
            style={
              Array [
                undefined,
                undefined,
                undefined,
                undefined,
                Object {},
                Object {},
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Array [
                  Object {
                    "backgroundColor": "#5847FF",
                    "borderRadius": 20,
                    "maxWidth": 400,
                  },
                  false,
                  Object {
                    "elevation": 4,
                    "shadowColor": "#79838A",
                    "shadowOffset": Object {
                      "height": 5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.2,
                    "shadowRadius": 12,
                  },
                  Object {
                    "backgroundColor": "#FFFFFF",
                  },
                  false,
                ],
              ]
            }
            testID="Hint.message"
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "textAlign": "left",
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Object {},
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "flexShrink": 1,
                      "fontFamily": "System",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              Hint message to hint things
            </Text>
          </View>
        </View>
        <Image
          accessibilityRole="image"
          accessible={false}
          assetGroup="icons"
          onError={[Function]}
          source={
            Object {
              "testUri": "../../../src/components/hint/assets/hintTipSide.png",
            }
          }
          style={
            Array [
              Object {
                "tintColor": "#FFFFFF",
              },
              undefined,
              undefined,
              undefined,
              undefined,
              Object {},
              Array [
                Object {
                  "position": "absolute",
                },
                Object {
                  "bottom": 9,
                  "left": 1,
                },
                Object {
                  "transform": Array [
                    Object {
                      "scaleY": -1,
                    },
                    Object {
                      "scaleX": 1,
                    },
                  ],
                },
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Hint Screen component test Test Hint modal is not visible when showHint is false 1`] = `null`;

exports[`Hint Screen component test Test Hint modal is visible when showHint is true 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  modifiers={
    Object {
      "alignments": Object {},
      "backgroundColor": undefined,
      "borderRadius": undefined,
      "color": "transparent",
      "flexStyle": undefined,
      "margins": Object {},
      "paddings": Object {},
      "positionStyle": undefined,
      "typography": undefined,
    }
  }
  onBackgroundPress={[Function]}
  onRequestClose={[Function]}
  testID="Hint.modal"
  transparent={true}
  visible={true}
>
  <View
    blurType="light"
    style={
      Array [
        undefined,
        undefined,
        undefined,
        undefined,
        Object {},
        Object {},
        Object {},
        Object {
          "flex": 1,
        },
      ]
    }
  >
    <View
      style={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          Object {},
          Object {},
          Object {},
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "backgroundColor": undefined,
            },
          ],
        ]
      }
      testID="Hint.modal"
      useSafeArea={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            Object {},
            Object {},
            Object {},
            Object {
              "flex": 1,
            },
          ]
        }
      />
    </View>
    <View
      collapsable={true}
      color="#FFFFFF"
      enableShadow={true}
      message="Hint message to hint things"
      onBackgroundPress={[Function]}
      position="top"
      removePaddings={true}
      style={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          Object {},
          Object {},
          Object {},
          Array [
            Object {
              "position": "absolute",
            },
            undefined,
            Object {
              "left": 1,
              "top": 1,
            },
          ],
        ]
      }
      targetFrame={
        Object {
          "height": 1,
          "width": 1,
          "x": 1,
          "y": 1,
        }
      }
      useSideTip={true}
      visible={true}
    >
      <View
        animated={true}
        pointerEvents="box-none"
        style={
          Object {
            "alignItems": "flex-start",
            "bottom": 0,
            "left": -1,
            "opacity": 1,
            "paddingHorizontal": 20,
            "paddingLeft": 1,
            "paddingVertical": 16,
            "position": "absolute",
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": 750,
          }
        }
        testID="Hint"
      >
        <View
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            centerV={true}
            row={true}
            style={
              Array [
                undefined,
                undefined,
                undefined,
                undefined,
                Object {},
                Object {},
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Array [
                  Object {
                    "backgroundColor": "#5847FF",
                    "borderRadius": 20,
                    "maxWidth": 400,
                  },
                  false,
                  Object {
                    "elevation": 4,
                    "shadowColor": "#79838A",
                    "shadowOffset": Object {
                      "height": 5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.2,
                    "shadowRadius": 12,
                  },
                  Object {
                    "backgroundColor": "#FFFFFF",
                  },
                  false,
                ],
              ]
            }
            testID="Hint.message"
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "textAlign": "left",
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Object {},
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "flexShrink": 1,
                      "fontFamily": "System",
                      "fontSize": 16,
                      "fontWeight": "400",
                      "lineHeight": 24,
                    },
                    undefined,
                  ],
                ]
              }
            >
              Hint message to hint things
            </Text>
          </View>
        </View>
        <Image
          accessibilityRole="image"
          accessible={false}
          assetGroup="icons"
          onError={[Function]}
          source={
            Object {
              "testUri": "../../../src/components/hint/assets/hintTipSide.png",
            }
          }
          style={
            Array [
              Object {
                "tintColor": "#FFFFFF",
              },
              undefined,
              undefined,
              undefined,
              undefined,
              Object {},
              Array [
                Object {
                  "position": "absolute",
                },
                Object {
                  "bottom": 9,
                  "left": 1,
                },
                Object {
                  "transform": Array [
                    Object {
                      "scaleY": -1,
                    },
                    Object {
                      "scaleX": 1,
                    },
                  ],
                },
              ],
            ]
          }
        />
      </View>
    </View>
  </View>
</Modal>
`;
